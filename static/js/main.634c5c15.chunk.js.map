{"version":3,"sources":["Components/TransactionHistory/transactionHistory.module.css","Components/Dashboard/dashboard.module.css","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.jsx","Components/Balance/balance.module.css","Components/Controls/controls.module.css"],"names":["module","exports","Controls","amount","onInputChange","onControlBtn","className","style","controls","container","type","value","onChange","onClick","name","Balance","transactions","sumOfValuesByTypes","balance","arrowUp","Math","round","toFixed","arrowDown","TransactionHistory","history","map","transaction","key","id","abs","time","Dashboard","state","notifyAmountNull","toast","containerId","notifyNotWithdraw","notifyInputInvalid","handleInputChange","target","amountInput","Number","String","setState","typeTransaction","filter","t","reduce","acc","handleControlBtn","timeTransaction","Date","shortid","generate","toLocaleString","test","prev","fromLS","localStorage","getItem","JSON","parse","this","prevProps","prevState","length","setItem","stringify","dashboard","enableMultiContainer","position","POSITION","BOTTOM_RIGHT","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.634c5c15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__1Kol-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__3RAy1\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './controls.module.css';\n\nconst Controls = ({ amount, onInputChange, onControlBtn }) => (\n  <section className={style.controls}>\n    <div className={style.container}>\n      <input type=\"number\" value={amount} onChange={onInputChange} />\n      <button type=\"button\" onClick={onControlBtn} name=\"deposit\">\n        Deposit\n      </button>\n      <button type=\"button\" onClick={onControlBtn} name=\"withdraw\">\n        Withdraw\n      </button>\n    </div>\n  </section>\n);\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onControlBtn: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './balance.module.css';\n\nconst Balance = ({ transactions, sumOfValuesByTypes }) => (\n  <section className={style.balance}>\n    <p>\n      <span className={style.arrowUp}>⬆</span>\n      <span>\n        {(\n          Math.round(sumOfValuesByTypes(transactions, 'deposit') * 100) / 100\n        ).toFixed(2)}\n        $\n      </span>\n    </p>\n    <p>\n      <span className={style.arrowDown}>⬇</span>\n      <span>\n        {(\n          Math.round(sumOfValuesByTypes(transactions, 'withdraw') * 100) / 100\n        ).toFixed(2)}\n        $\n      </span>\n    </p>\n    <span className={style.container}>\n      Balance:{' '}\n      {(\n        Math.round(\n          (sumOfValuesByTypes(transactions, 'deposit') -\n            sumOfValuesByTypes(transactions, 'withdraw')) *\n            100,\n        ) / 100\n      ).toFixed(2)}\n      $\n    </span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  sumOfValuesByTypes: PropTypes.func.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={style.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td>{transaction.type}</td>\n          <td>\n            {(Math.round(Math.abs(transaction.amount) * 100) / 100).toFixed(2)}$\n          </td>\n          <td>{transaction.time}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport style from './dashboard.module.css';\n\nclass Dashboard extends React.Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    transactions: [],\n    amount: '',\n  };\n\n  componentDidMount() {\n    const fromLS = localStorage.getItem('transactions')\n      ? JSON.parse(localStorage.getItem('transactions'))\n      : [];\n    return this.setState({ transactions: fromLS });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    return (\n      prevState.transactions.length !== transactions.length &&\n      localStorage.setItem('transactions', JSON.stringify(transactions))\n    );\n  }\n\n  notifyAmountNull = () =>\n    toast('Введите сумму для проведения операции!', {\n      containerId: 'amountControl',\n    });\n\n  notifyNotWithdraw = () =>\n    toast('На счету недостаточно средств для проведения операции!', {\n      containerId: 'amountControl',\n    });\n\n  notifyInputInvalid = () =>\n    toast(`Введена не корректная сумма ${this.state.amount}. Повторите ввод!`, {\n      containerId: 'amountControl',\n    });\n\n  handleInputChange = ({ target }) => {\n    const { value } = target;\n    const amountInput = Number(value) >= 0 ? value : String(Math.abs(value));\n\n    return this.setState({\n      amount: amountInput,\n    });\n  };\n\n  sumOfValuesByTypes = (transactions, typeTransaction) => {\n    return transactions\n      .filter(t => t.type === typeTransaction)\n      .reduce((acc, t) => acc + Number(t.amount), 0);\n  };\n\n  handleControlBtn = ({ target }) => {\n    const timeTransaction = new Date();\n    const { amount, transactions } = this.state;\n    const exp = /^0\\d+/g;\n    const transaction = {\n      id: shortid.generate(),\n      amount: Number(amount),\n      time: timeTransaction.toLocaleString(),\n    };\n\n    if (!Number(amount)) {\n      return this.notifyAmountNull();\n    }\n\n    if (exp.test(amount)) {\n      this.setState({ amount: '' });\n      return this.notifyInputInvalid();\n    }\n\n    if (target.name === 'deposit') {\n      transaction.type = 'deposit';\n    } else if (target.name === 'withdraw') {\n      if (\n        Number(amount) >\n        this.sumOfValuesByTypes(transactions, 'deposit') -\n          this.sumOfValuesByTypes(transactions, 'withdraw')\n      ) {\n        return this.notifyNotWithdraw();\n      }\n\n      transaction.type = 'withdraw';\n    }\n\n    return this.setState(prev => ({\n      transactions: [transaction, ...prev.transactions],\n      amount: '',\n    }));\n  };\n\n  render() {\n    const { amount, transactions } = this.state;\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          amount={amount}\n          onInputChange={this.handleInputChange}\n          onControlBtn={this.handleControlBtn}\n        />\n        <Balance\n          transactions={transactions}\n          sumOfValuesByTypes={this.sumOfValuesByTypes}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer\n          enableMultiContainer\n          containerId=\"amountControl\"\n          position={toast.POSITION.BOTTOM_RIGHT}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__3MJHe\",\"arrowUp\":\"balance_arrowUp__2xSv-\",\"arrowDown\":\"balance_arrowDown__2ObiU\",\"container\":\"balance_container__39U-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__dN9o-\",\"container\":\"controls_container__3DMyY\"};"],"sourceRoot":""}